-# NOTES on control over mapping deletion:
-# deleteMappings() is a callback that is called by "#delete_mappings_button" created below.
-# The appearance of that button is controlled by updateMappingDeletePermissions(), which
-# relies on @delete_mapping_permission in /app/views/mappings/_mapping_table.html.haml; which,
-# in turn, is set by /app/controllers/application_controller.check_delete_mapping_permission()

%div{:style => "padding: 1%; width: 98%"}
  - if session[:user].nil?
    = link_to('Create mapping', |
              login_index_path(redirect: ontology_path(@ontology.acronym, p: 'classes', conceptid: @concept.id, t: 'mappings')), |
              class: 'btn btn-primary') |
  - else
    = link_to("Create mapping", |
              new_mapping_path(ontology_from: "#{@ontology.id}", conceptid_from: "#{@concept.id}"), |
              id: "new_mapping_btn", |
              role: "button", |
              class: "btn btn-primary", |
              data: {'bs-toggle': "modal", 'bs-target': "#createNewMappingModal", concept_label: "#{@concept.prefLabel}"}, |
              remote: "true")

    = link_to "Delete Selected Mappings", "javascript:void(0);", :onclick => "if (confirm('Really delete mappings? This cannot be undone.')) deleteMappings()", :id => "delete_mappings_button", :class => "btn btn-default", role: "button"
    %span#delete_mappings_spinner{:style => "display: none;"}= loading_spinner(false, true)
    %span#delete_mappings_error{:style => "display: none; color: red; padding-left: 5px;"}
  %br/
  %br/
  #mapping_details
    = render :partial => '/mappings/mapping_table'
